SIGNALS
=======

:code:`SIGHUP`
    Cause OpenVPN to close all TUN/TAP and network connections, restart,
    re-read the configuration file (if any), and reopen TUN/TAP and network
    connections.

:code:`SIGUSR1`
    Like :code:`SIGHUP`, except don't re-read configuration file, and
    possibly don't close and reopen TUN/TAP device, re-read key files,
    preserve local IP address/port, or preserve most recently authenticated
    remote IP address/port based on ``--persist-tun``, ``--persist-key``,
    ``--persist-local-ip`` and ``--persist-remote-ip`` options respectively
    (see above).

    This signal may also be internally generated by a timeout condition,
    governed by the ``--ping-restart`` option.

    This signal, when combined with ``--persist-remote-ip``, may be sent
    when the underlying parameters of the host's network interface change
    such as when the host is a DHCP client and is assigned a new IP address.
    See ``--ipchange`` for more information.

好的，我们来详细解读一下 OpenVPN 客户端在收到 `USR2` 信号后打印的这些统计信息。这些信息提供了关于 VPN 连接当前数据传输状态的快照。

**核心概念：数据流向**

要理解这些统计信息，关键是理解 OpenVPN 的数据流：

1.  **你的计算机 (应用层) <-> TUN/TAP 虚拟网卡：** 这是 VPN *内部* 的流量。应用程序（浏览器、文件共享等）认为自己在与 VPN 内部的服务器通信，数据流经虚拟网卡。
2.  **TUN/TAP 虚拟网卡 <-> OpenVPN 进程：** OpenVPN 进程从 TUN/TAP 读取应用程序要发送到 VPN 内部的数据（准备加密和发送出去），并将从 VPN 服务器收到的数据（解密后）写入 TUN/TAP（供你的应用程序读取）。
3.  **OpenVPN 进程 <-> 物理网络接口 (TCP/UDP)：** OpenVPN 进程将来自 TUN/TAP 的数据加密、封装后，通过物理网络接口（Wi-Fi/以太网）发送到 OpenVPN 服务器（通常是互联网）。同时，它也从物理接口接收来自服务器的加密数据包，进行解封装、解密。

**统计信息逐行解析：**

1.  **`Updated,Mon Jul 21 12:41:06 2025`**
    *   **含义：** 这行告诉你以下统计信息是在 **2025 年 7 月 21 日 星期一 12:41:06** 这个时刻生成的。
    *   **重要性：** 这是数据的“新鲜度”标记。当你多次发送 `USR2` 信号时，对比这里的更新时间就能看出数据是否更新了。

2.  **`TUN/TAP read bytes,14938762`**
    *   **含义：** OpenVPN 进程 **从 TUN/TAP 虚拟网卡读取** 的总字节数。这是 **你的计算机准备通过 VPN 发送出去的数据量**（即 VPN *客户端出口* 流量）。
    *   **详细解释：** 当你的应用程序（如浏览器访问公司内网服务器）产生要发送到 VPN 内部目标的数据包时，这些包被路由到 TUN/TAP 虚拟网卡。OpenVPN 进程随后从这个虚拟网卡读取这些原始数据包（尚未加密），以便进行后续的加密和发送。这个数字就是累计读取的所有这类原始数据的总大小（单位：字节）。

3.  **`TUN/TAP write bytes,14665245`**
    *   **含义：** OpenVPN 进程 **写入到 TUN/TAP 虚拟网卡** 的总字节数。这是 **你的计算机通过 VPN 接收到的数据量**（即 VPN *客户端入口* 流量）。
    *   **详细解释：** OpenVPN 进程从物理网络接收到来自 VPN 服务器的加密数据包，解密后得到原始数据包。这些原始数据包需要被传递给你的应用程序。OpenVPN 进程将这些解密后的数据包写入 TUN/TAP 虚拟网卡，然后操作系统会将这些包路由给你的目标应用程序（如访问内网资源的浏览器）。这个数字就是累计写入的所有这类原始数据的总大小（单位：字节）。

4.  **`TCP/UDP read bytes,16628371`**
    *   **含义：** OpenVPN 进程 **从物理网络接口读取** 的总字节数（通过指定的传输协议：TCP 或 UDP）。这是 **你的客户端从 VPN 服务器接收到的加密数据总量**（包含 OpenVPN 协议头、加密开销等）。
    *   **详细解释：** 这是通过网络线缆或 Wi-Fi 实际接收到的、来自 OpenVPN 服务器的原始网络数据包的总大小。这些数据包包含了加密后的应用程序数据以及 OpenVPN 协议本身需要的控制信息（如加密头、认证信息、握手包等）。这个值通常会比 `TUN/TAP write bytes` 大，因为包含了协议开销。

5.  **`TCP/UDP write bytes,17375805`**
    *   **含义：** OpenVPN 进程 **写入到物理网络接口** 的总字节数（通过指定的传输协议：TCP 或 UDP）。这是 **你的客户端发送给 VPN 服务器的加密数据总量**（包含 OpenVPN 协议头、加密开销等）。
    *   **详细解释：** 这是通过网络线缆或 Wi-Fi 实际发送出去的、发往 OpenVPN 服务器的原始网络数据包的总大小。这些数据包包含了加密后的应用程序数据以及 OpenVPN 协议本身需要的控制信息。这个值通常会比 `TUN/TAP read bytes` 大，因为包含了协议开销。

6.  **`Auth read bytes,14669373`**
    *   **含义：** OpenVPN 进程 **成功解密并验证** 的总字节数。这代表了 **从 VPN 服务器接收到的、有效的、应用程序负载数据** 的总量。
    *   **详细解释：** 这个数字非常接近 `TUN/TAP write bytes`。它表示的是从接收到的加密数据 (`TCP/UDP read bytes`) 中剥离掉 OpenVPN 协议头、解密、并成功通过完整性验证（如 HMAC）后的**纯应用程序数据**的总大小。理论上，它应该等于 `TUN/TAP write bytes`，因为写入 TUN/TAP 的就是这些解密验证后的数据。但细微的差异可能源于统计时机或内部缓冲处理。它是衡量“真正有用”的下载流量的另一个指标。

7.  **`END`**
    *   **含义：** 标志着统计信息块的结束。

**关键对比与洞察：**

*   **`TUN/TAP read bytes` vs `TCP/UDP write bytes`：** 前者是原始出站应用数据，后者是包含加密和协议头的实际网络发送量。差值 (`17375805 - 14938762 = 2437043 bytes`) 主要反映了 OpenVPN 协议（加密、认证头、封装）带来的**开销**。这个开销是必要的，但会增加带宽消耗。
*   **`TUN/TAP write bytes` vs `TCP/UDP read bytes`：** 前者是原始入站应用数据，后者是包含协议头的实际网络接收量。差值 (`16628371 - 14665245 = 1963126 bytes`) 同样反映了协议开销。
*   **`TUN/TAP write bytes` vs `Auth read bytes`：** 这两个值 (`14665245` vs `14669373`) 非常接近（差异 `4132` 字节，可能是统计误差或极小内部处理差异）。理论上它们应该相等，因为 `Auth read bytes` 是解密验证后准备写入 TUN/TAP 的数据量，而 `TUN/TAP write bytes` 是实际写入的量。
*   **流量平衡：** 在这个例子中，下载 (`TUN/TAP write bytes: 14.6MB`) 和上传 (`TUN/TAP read bytes: 14.9MB`) 大致平衡，上传略多一点点。

**总结：**

OpenVPN 的 `USR2` 信号统计信息提供了 VPN 连接数据流的详细快照：

*   **`TUN/TAP read/write bytes`** 反映 VPN *内部* 的**原始应用程序数据**流量（进出你的电脑）。
*   **`TCP/UDP read/write bytes`** 反映 VPN *外部* 的**实际网络传输**流量（包含加密和协议开销）。
*   **`Auth read bytes`** 专门指接收到的、验证有效的应用程序数据量（非常接近 `TUN/TAP write bytes`）。
*   比较这些值可以直观地看到 **OpenVPN 协议本身带来的开销**。
*   **`Updated`** 时间戳告诉你数据是何时采集的。

这些信息对于监控 VPN 连接状态、诊断可能的性能问题（如开销过大导致速度慢）、了解流量模式非常有用。
